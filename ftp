#!/usr/bin/python3

from ftplib import FTP
from argparse import ArgumentParser
import os

def retr(path, host, user="anonymous", passwd="anonymous"):
    ftp = FTP(host, user=user, passwd=passwd)
    filename = os.path.basename(path)
    with open(filename, 'wb') as f:
        try:
            ftp.retrbinary(f"RETR {path}", f.write)
        except Exception as e:
            print(e)

def upload(path, host, user, passwd):
    ftp = FTP(host, user=user, passwd=passwd)
    filename = os.path.basename(path)
    print(filename)
    try:
        ftp.delete(filename)
    except Exception:
        pass
    finally:
        ftp.storbinary(f"STOR {filename}", open(path, "rb"))

if __name__ == "__main__":
    parser = ArgumentParser(description="A CLI tool for connecting to ftp servers.")
    
    parser.add_argument("command")
    parser.add_argument("-a", action="store_true", dest="anon", help="login with anonymous credentials")
    parser.add_argument("-H","--host", type=str, required=True, dest="host")
    parser.add_argument("-u","--user", type=str, required=False, dest="user")
    parser.add_argument("-p","--passwd", type=str, required=False, dest="passwd")
    parser.add_argument("-f", "--file", type=str, required=True, dest="file")

    args = parser.parse_args()

    if args.command == "retr":
        if args.anon:
            retr(args.file, args.host)
        else:
            retr(args.file, args.host, args.user, args.passwd)
    elif args.command == "upload":
        if args.anon:
            upload(args.file, args.host)
        else:
            upload(args.file, args.host, args.user, args.passwd)

